install.packages("afapi")
devtools::install_github("appfigures/afapi")
devtools::install_github("appfigures/afapi")
usage = getUsage()
library(afapi)
devtools::install_github("appfigures/afapi")
install.packages("RCurl")
install.packages("jsonlite")
devtools::install_github("appfigures/afapi")
devtools::install_github("appfigures/afapi")
ys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS=TRUE)
Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS=TRUE)
devtools::install_github("appfigures/afapi")
library(afapi)
USERNAME = "klau@hotheadgames.com"
PASSWORD = "password123"
API_KEY = "40c7903b047c4395aa488f5f2c26697d"
BASE_URI = "https://api.appfigures.com/v2"
usage = getUsage()
usage = getUsage()
library(afapi)
usage = getUsage()
BASE_URI = "https://api.appfigures.com/v2"
usage = getUsage()
USERNAME = "klau@hotheadgames.com"
PASSWORD = "password123"
API_KEY = "40c7903b047c4395aa488f5f2c26697d"
BASE_URI = "https://api.appfigures.com/v2"
usage = getUsage()
BASE_URI = "http://api.appfigures.com/v2"
usage = getUsage()
BASE_URI = "https://api.appfigures.com/v2"
usage = getUsage()
usage = getUsage()
# One-time modify file
raw = read.csv("prices_df.csv")
setwd("C://Users//klau//Desktop//Work//Github_Ken//Stocks")
rm(list=ls())
library(dplyr)
library(lubridate)
library(reshape2)
library(glue)
library(ggplot2)
library(scales)
library(tidyquant)
library(rvest)
library(magrittr)
library(stringr)
# One-time modify file
raw = read.csv("prices_df.csv")
head(raw)
raw = raw[,c("symbol","date","close")]
head(raw)
write.csv(raw, "prices.csv", row.names=F)
raw_current = read.csv("prices.csv")
head(raw_current)
dim(raw_current)
symbols = unique(dat_current$symbol)
dat_current = raw_current
symbols = unique(dat_current$symbol)
length(symbols)
max(dat_current$date)
raw_current = read.csv("prices.csv", stringsAsFactors=F)
dat_current = raw_current
symbols = unique(dat_current$symbol)
head(symbols)
from1 = max(dat_current$date)
from1
to1 = Sys.Date() - 1
to1
from1
to1
to1 > from1
from1
to1
dat_new = tq_get(symbols, from=from1, to=to1, get="stock.prices")
dim(dat_new)
head(dat_new)
dat_new = dat_new[,c("symbol","date","close")]
head(dat_current)
head(dat_new)
class(dat_new$close)
class(dat_current$close)
dat_current = rbind(dat_current, dat_new)
dim(raw_current)
dim(dat_current)
range(dat_current$date)
tail(dat_current)
class(dat_new$date)
class(dat_current$date)
dat_new$date = as.character(dat_new$date)
dat_current = raw_current
symbols = unique(dat_current$symbol)
from1 = max(dat_current$date)
to1 = Sys.Date() - 1
dat_current = rbind(dat_current, dat_new)
range(dat_current$date)
min_date_keep = max(to1) - 8*365
min_date_keep
min_date_keep = as.character(max(to1) - 8*365)
min_date_keep
out = filter(dat_current, date>=min_date_keep)
head(out)
dim(Out)
dim(out)
write.csv("prices.csv", out, row.names=F)
write.csv(out, "prices.csv", row.names=F)
library(dplyr)
library(lubridate)
library(reshape2)
library(glue)
library(ggplot2)
library(scales)
library(tidyquant)
library(rvest)
library(magrittr)
library(stringr)
raw = read.csv("prices.csv", stringsAsFactors=F)
dat = raw
head(dat)
x = filter(prices_df, symbol == "NOC")
x = filter(dat, symbol == "NOC")
x
head(x)
class(x$date)
out = x
train = arrange(out, date)
head(train)
tail(train)
train$time = 1:nrow(train)
fit = lm(close ~ time, train)
out = x
train = arrange(out, date)
train$time = 1:nrow(train)
fit = lm(close ~ time, train)
coef(fit)[2]
mean(train$close, na.rm=T)
head(train)
plot(train$time, train$close)
tail(out, 1)
tail(out, 1)
out = arrange(x, date)
tail(out, 1)
x = filter(dat, symbol == "NOC")
out = arrange(x, date)
train = tail(out, 30)
train$time = 1:nrow(train)
fit = lm(close ~ time, train)
out$slope = coef(fit)[2]/mean(train$close, na.rm=T)
tail(train, 1)$close/mean(tail(train, 1)$close)
head(out)
tail(train, 1)$close
tail(train, 1)$close/mean(train$close)
tail(train, 1)$close
train$close
x = filter(dat, symbol == "NOC")
out = arrange(x, date)
train = tail(out, 30)
train$time = 1:nrow(train)
fit = lm(close ~ time, train)
out$slope = coef(fit)[2]/mean(train$close, na.rm=T)
out$today_pct_val = tail(train, 1)$close/mean(train$close)
head(out)
dat = raw
tmp_fn = function(x) {
# x = filter(dat, symbol == "NOC")
print(x$symbol[1])
out = arrange(x, date)
train = tail(out, 30)
train$time = 1:nrow(train)
fit = lm(close ~ time, train)
out$slope = coef(fit)[2]/mean(train$close, na.rm=T)
out$today_pct_val = tail(train, 1)$close/mean(train$close)
return(out)
}
res_df = group_by(dat, symbol) %>% dplyr::do(tmp_fn(.))
head(res_df)
res_agg = group_by(res_df, symbol) %>%
summarise(slope=max(slope), today_pct_val=max(today_pct_val))
res_agg = mutate(res_agg, slope_score=rank(-slope), pct_val_score=rank(today_pct_val),
overall_score=.5*slope_score + .5*pct_val_score)
head(res_agg)
out_df = inner_join(res_df, res_agg, by="symbol")
head(out_df)
res_agg = group_by(res_df, symbol) %>%
summarise(slope=max(slope), today_pct_val=max(today_pct_val))
res_agg = mutate(res_agg, slope_score=rank(-slope), pct_val_score=rank(today_pct_val),
overall_score=.5*slope_score + .5*pct_val_score)
res_agg = dplyr::select(res_agg, symbol, overall_score)
out_df = inner_join(res_df, res_agg, by="symbol")
head(out_df)
out_df = dplyr::select(out_df, symbol, date, close)
head(out_df)
unique(out_df$symbol)
?grep
out_df = mutate(out_df, exchange=grepl("\\.TO", symbol))
head(out_df)
out_df = mutate(out_df, exchange=grepl("\\.TO", symbol),
exchange=case_when(exchange ~ "TSX", exchange ~ "S&P500"))
head(out_df)
out_df = inner_join(res_df, res_agg, by="symbol")
out_df = dplyr::select(out_df, symbol, date, close, overall_score)
out_df = mutate(out_df, exchange=grepl("\\.TO", symbol),
exchange=case_when(exchange == T ~ "TSX", exchange == F ~ "S&P500"))
head(out_df)
a = filter(out_df, exchange=="TSX")
head(a)
x = filter(out_df, exchange=="TSX")
gg = ggplot(x, aes(x=date, y=close)) + geom_line(size=1.2) + geom_point(size=2) +
scale_x_date(date_labels="%b %Y", date_breaks = "1 month") +
scale_y_continuous("Price", breaks=pretty_breaks(n=10))
gg
gg = ggplot(x, aes(x=as.Date(date), y=close)) + geom_line(size=1.2) + geom_point(size=2) +
scale_x_date(date_labels="%b %Y", date_breaks = "1 month") +
scale_y_continuous("Price", breaks=pretty_breaks(n=10))
gg
gg = ggplot(x, aes(x=as.Date(date), y=close)) + geom_line(size=1.2) + geom_point(size=2) +
facet_wrap(~symbol, ncol=1, scales="free") +
scale_x_date(date_labels="%b %Y", date_breaks = "1 month") +
scale_y_continuous("Price", breaks=pretty_breaks(n=10))
gg
library(plotly)
gg
p = ggplotly(gg)
n_distinct(filter(out_df, exchange=="TSX")$symbol)
head(x)
x = arrange(x, overall_score)
head(x)
tail(x)
min(out_df$overall_score)
dat = raw
tmp_fn = function(x) {
# x = filter(dat, symbol == "NOC")
#print(x$symbol[1])
out = arrange(x, date)
train = tail(out, 30)
train$time = 1:nrow(train)
fit = lm(close ~ time, train)
out$slope = coef(fit)[2]/mean(train$close, na.rm=T)
out$today_pct_val = tail(train, 1)$close/mean(train$close)
return(out)
}
res_df = group_by(dat, symbol) %>% dplyr::do(tmp_fn(.))
res_agg = group_by(res_df, symbol) %>%
summarise(slope=max(slope), today_pct_val=max(today_pct_val))
res_agg = mutate(res_agg, slope_score=rank(-slope), pct_val_score=rank(today_pct_val),
overall_score=.2*slope_score + .8*pct_val_score)
res_agg = dplyr::select(res_agg, symbol, overall_score)
out_df = inner_join(res_df, res_agg, by="symbol")
out_df = dplyr::select(out_df, symbol, date, close, overall_score)
out_df = mutate(out_df, exchange=grepl("\\.TO", symbol),
exchange=case_when(exchange == T ~ "TSX", exchange == F ~ "S&P500"))
x = filter(out_df, exchange=="TSX")
x = arrange(x, overall_score)
tail(x)
head(x)
col_in = rep(brewer.pal(5,"Set1"),times=4)
library(RColorBrewer)
col_in = rep(brewer.pal(5,"Set1"),times=4)
col_in
col_in = rep(brewer.pal("Set1"),times=4)
col_in = rep(brewer.pal(10,"Set1"),times=4)
col_in
col_in = rep(brewer.pal(12,"Set1"),times=4)
col_in
col_in = rep(brewer.pal(10,"Set1"),times=100)
col_in
col_in = rep(brewer.pal(10,"Set1"),times=200)
length(col_in)
col_in = rep(brewer.pal(10,"Set1"),times=200)
col_in = col_in[1:n_distinct(x$symbol)]
x = filter(out_df, exchange=="TSX")
x = arrange(x, overall_score)
col_in = rep(brewer.pal(10,"Set1"),times=200)
col_in = col_in[1:n_distinct(x$symbol)]
gg = ggplot(x, aes(x=as.Date(date), y=close, color=symbol)) +
geom_line(size=.8) + geom_point(size=1) +
facet_wrap(~symbol, ncol=1, scales="free") +
scale_x_date(date_labels="%b %Y", date_breaks = "4 month") +
scale_y_continuous("Price", breaks=pretty_breaks(n=10)) +
scale_colour_manual(values=col_in) +
theme(legend.position="none")
gg
x = filter(out_df, exchange=="TSX")
x = arrange(x, overall_score)
head(x)
min(x$overall_score)
max(x$overall_score)
dat = raw
tmp_fn = function(x) {
# x = filter(dat, symbol == "NOC")
#print(x$symbol[1])
out = arrange(x, date)
train = tail(out, 30)
train$time = 1:nrow(train)
fit = lm(close ~ time, train)
out$slope = coef(fit)[2]/mean(train$close, na.rm=T)
out$today_pct_val = tail(train, 1)$close/mean(train$close)
return(out)
}
res_df = group_by(dat, symbol) %>% dplyr::do(tmp_fn(.))
res_agg = group_by(res_df, symbol) %>%
summarise(slope=max(slope), today_pct_val=max(today_pct_val))
res_agg = mutate(res_agg, slope_score=rank(-slope), pct_val_score=rank(today_pct_val),
overall_score=.2*slope_score + .8*pct_val_score)
res_agg = dplyr::select(res_agg, symbol, overall_score)
out_df = inner_join(res_df, res_agg, by="symbol")
out_df = dplyr::select(out_df, symbol, date, close, overall_score)
out_df = mutate(out_df, exchange=grepl("\\.TO", symbol),
exchange=case_when(exchange == T ~ "TSX", exchange == F ~ "S&P500"))
x = filter(out_df, exchange=="TSX")
x = arrange(x, overall_score)
head9x
head(x)
tail(x)
a = unique(x$symbol)
head(a)
x = filter(out_df, exchange=="TSX")
x = arrange(x, overall_score)
x = mutate(x, symbol=factor(symbol, levels=unique(symbol)))
col_in = rep(brewer.pal(10,"Set1"),times=200)
col_in = col_in[1:n_distinct(x$symbol)]
dat = raw
tmp_fn = function(x) {
# x = filter(dat, symbol == "NOC")
#print(x$symbol[1])
out = arrange(x, date)
train = tail(out, 70)
# train$time = 1:nrow(train)
# fit = lm(close ~ time, train)
# out$slope = coef(fit)[2]/mean(train$close, na.rm=T)
out$slope = 1
out$today_pct_val = mean(tail(train, 7))$close/mean(train$close)
return(out)
}
res_df = group_by(dat, symbol) %>% dplyr::do(tmp_fn(.))
dat = raw
tmp_fn = function(x) {
# x = filter(dat, symbol == "NOC")
#print(x$symbol[1])
out = arrange(x, date)
train = tail(out, 70)
# train$time = 1:nrow(train)
# fit = lm(close ~ time, train)
# out$slope = coef(fit)[2]/mean(train$close, na.rm=T)
out$slope = 1
out$today_pct_val = mean(tail(train, 7)$close)/mean(train$close)
return(out)
}
res_df = group_by(dat, symbol) %>% dplyr::do(tmp_fn(.))
res_agg = group_by(res_df, symbol) %>%
summarise(slope=max(slope), today_pct_val=max(today_pct_val))
res_agg = mutate(res_agg, slope_score=rank(-slope), pct_val_score=rank(today_pct_val),
overall_score=pct_val_score)
res_agg = dplyr::select(res_agg, symbol, overall_score)
out_df = inner_join(res_df, res_agg, by="symbol")
out_df = dplyr::select(out_df, symbol, date, close, overall_score)
out_df = mutate(out_df, exchange=grepl("\\.TO", symbol),
exchange=case_when(exchange == T ~ "TSX", exchange == F ~ "S&P500"))
dat = raw
dat = raw
tmp_fn = function(x) {
# x = filter(dat, symbol == "NOC")
#print(x$symbol[1])
out = arrange(x, date)
train = tail(out, 70)
# train$time = 1:nrow(train)
# fit = lm(close ~ time, train)
# out$slope = coef(fit)[2]/mean(train$close, na.rm=T)
out$slope = 1
out$today_pct_val = mean(tail(train, 7)$close)/mean(train$close)
return(out)
}
res_df = group_by(dat, symbol) %>% dplyr::do(tmp_fn(.))
res_agg = group_by(res_df, symbol) %>%
summarise(slope=max(slope), today_pct_val=max(today_pct_val))
res_agg = mutate(res_agg, slope_score=rank(-slope), pct_val_score=rank(today_pct_val),
overall_score=pct_val_score)
res_agg = dplyr::select(res_agg, symbol, overall_score)
out_df = inner_join(res_df, res_agg, by="symbol")
out_df = dplyr::select(out_df, symbol, date, close, overall_score)
out_df = mutate(out_df, exchange=grepl("\\.TO", symbol),
exchange=case_when(exchange == T ~ "TSX", exchange == F ~ "S&P500"))
head(out_df)
min(out_df$overall_score)
max(out_df$overall_score)
x = filter(out_df, exchange=="TSX")
#x = mutate(x, symbol=factor(symbol, levels=unique(symbol)))
col_in = rep(brewer.pal(9,"Set1"),times=300)
col_in = col_in[1:n_distinct(x$symbol)]
gg = ggplot(x, aes(x=as.Date(date), y=close, color=reorder(symbol,overall_score,FUN=mean))) +
geom_line(size=.2) + geom_point(size=.2) +
facet_wrap(~reorder(symbol,overall_score,FUN=mean), ncol=1, scales="free") +
scale_x_date(date_labels="%b %Y", date_breaks = "6 month") +
scale_y_continuous("Price", breaks=pretty_breaks(n=5)) +
scale_colour_manual(values=col_in) +
theme(legend.position="none", element_text(size=8))
gg
head(x)
class(x$overall_score)
class(x$exchange)
unique(x$overall_score)
unique(x$symbol)
unique(x$date)
mean(x$close)
sum(is.na(x$close))
gg = ggplot(x, aes(x=as.Date(date), y=close, color=reorder(symbol,overall_score,FUN=max))) +
geom_line(size=.2) + geom_point(size=.2) +
facet_wrap(~reorder(symbol,overall_score,FUN=max), ncol=1, scales="free") +
scale_x_date(date_labels="%b %Y", date_breaks = "6 months") +
scale_y_continuous("Price", breaks=pretty_breaks(n=5)) +
scale_colour_manual(values=col_in) +
theme(legend.position="none", element_text(size=8))
gg
class(x$symbol)
class(x$date)
class(x$close)
class(x$overall_score)
class(x$exchange)
x = filter(out_df, exchange=="TSX")
x = arrange(x, overall_score)
x$symbol = with(mpg, reorder(symbol, overall_score, mean))
x$symbol = with(x, reorder(symbol, overall_score, mean))
x = filter(out_df, exchange=="TSX")
x = arrange(x, overall_score)
x$symbol = with(x, reorder(symbol, overall_score, mean))
#x = mutate(x, symbol=factor(symbol, levels=unique(symbol)))
col_in = rep(brewer.pal(9,"Set1"),times=300)
col_in = col_in[1:n_distinct(x$symbol)]
col_in
gg = ggplot(x, aes(x=as.Date(date), y=close, color=symbol)) +
geom_line(size=.2) + geom_point(size=.2) +
facet_wrap(~symbol, ncol=1, scales="free") +
scale_x_date(date_labels="%b %Y", date_breaks = "6 months") +
scale_y_continuous("Price", breaks=pretty_breaks(n=5)) +
scale_colour_manual(values=col_in) +
theme(legend.position="none", element_text(size=8))
gg
class(x$overall_score)
head(x)
x = filter(out_df, exchange=="TSX")
x = arrange(x, overall_score)
x$symbol = with(x, reorder(symbol, overall_score, mean))
x = as.data.frame(x)
head(x)
#x = mutate(x, symbol=factor(symbol, levels=unique(symbol)))
col_in = rep(brewer.pal(9,"Set1"),times=300)
col_in = col_in[1:n_distinct(x$symbol)]
gg = ggplot(x, aes(x=as.Date(date), y=close, color=symbol)) +
geom_line(size=.2) + geom_point(size=.2) +
facet_wrap(~symbol, ncol=1, scales="free") +
scale_x_date(date_labels="%b %Y", date_breaks = "6 months") +
scale_y_continuous("Price", breaks=pretty_breaks(n=5)) +
scale_colour_manual(values=col_in) +
theme(legend.position="none", element_text(size=8))
gg
x = filter(out_df, exchange=="TSX")
x = arrange(x, overall_score)
#x$symbol = with(x, reorder(symbol, overall_score, mean))
x = as.data.frame(x)
#x = mutate(x, symbol=factor(symbol, levels=unique(symbol)))
col_in = rep(brewer.pal(9,"Set1"),times=300)
col_in = col_in[1:n_distinct(x$symbol)]
gg = ggplot(x, aes(x=as.Date(date), y=close, color=symbol)) +
geom_line(size=.2) + geom_point(size=.2) +
facet_wrap(~symbol, ncol=1, scales="free") +
scale_x_date(date_labels="%b %Y", date_breaks = "6 months") +
scale_y_continuous("Price", breaks=pretty_breaks(n=5)) +
scale_colour_manual(values=col_in) +
theme(legend.position="none", element_text(size=8))
gg
gg = ggplot(x, aes(x=as.Date(date), y=close)) +
geom_line(size=.2) + geom_point(size=.2) +
facet_wrap(~symbol, ncol=1, scales="free") +
scale_x_date(date_labels="%b %Y", date_breaks = "6 months") +
scale_y_continuous("Price", breaks=pretty_breaks(n=5)) +
theme(legend.position="none", element_text(size=8))
gg
head(x$symbol)
gg = ggplot(x, aes(x=as.Date(date), y=close)) +
geom_line(size=.2) + geom_point(size=.2) +
facet_wrap(~symbol, ncol=1, scales="free") +
scale_x_date(date_labels="%b %Y", date_breaks = "6 months") +
scale_y_continuous("Price", breaks=pretty_breaks(n=5))
gg
gg = ggplot(x, aes(x=as.Date(date), y=close)) +
geom_line(size=.2) + geom_point(size=.2) +
facet_wrap(~symbol, ncol=1, scales="free") +
scale_x_date(date_labels="%b %Y", date_breaks = "6 months") +
scale_y_continuous("Price", breaks=pretty_breaks(n=5)) +
theme(legend.position="none")
gg
gg = ggplot(x, aes(x=as.Date(date), y=close)) +
geom_line(size=.2) + geom_point(size=.2) +
facet_wrap(~symbol, ncol=1, scales="free") +
scale_x_date(date_labels="%b %Y", date_breaks = "6 months") +
scale_y_continuous("Price", breaks=pretty_breaks(n=5)) +
theme(legend.position="none", element_text(size=8))
gg
gg = ggplot(x, aes(x=as.Date(date), y=close, color=symbol)) +
geom_line(size=.2) + geom_point(size=.2) +
facet_wrap(~symbol, ncol=1, scales="free") +
scale_x_date(date_labels="%b %Y", date_breaks = "12 months") +
scale_y_continuous("Price", breaks=pretty_breaks(n=5)) +
scale_colour_manual(values=col_in) +
theme(legend.position="none", text=element_text(size=8))
gg
unique(out_df$exchange)
n_distinct(filter(out_df, exchange=="TSX"))
n_distinct(filter(out_df, exchange=="TSX")$symbol)
n_distinct(filter(out_df, exchange=="S&P500")$symbol)
480/142
